<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC 
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
	<sql-query name="EoOrderItemGridQuery">
		<![CDATA[

SELECT
	EOOI.EOOI_ID,
	EOOI.CREATOR,
	EOOI.CREATE_TIME,
	EOOI.MODIFIER,
	EOOI.MODIFY_TIME,
	EOOI.REC_VER,
	EOOI.REC_STATUS,
	EOOI.ORG_ID,
	EOOI.PM_CODE,
	EOOI.EOOI_ORDER_NO,
	EOOI.EOOI_CODE,
	EOOI.EOOI_NAME,
	EOOI.EOOI_PACKAGE_TYPE_CODE,
	EOOI.EOOI_PACKAGE_TYPE_NAME,
	EOOI.EOOI_PACKAGE_UNIT_CODE,
	EOOI.EOOI_PACKAGE_UNIT_NAME,
	EOOI.EOOI_PACKAGE_QUANTITY,
	EOOI.EOOI_QUANTITY,
	ROUND(EOOI.EOOI_GROSS_WEIGHT,2) AS EOOI_GROSS_WEIGHT,
	EOOI.EOOI_NET_WEIGHT,
	ROUND(EOOI.EOOI_VOLUME,6) AS EOOI_VOLUME,
	EOOI.EOOI_LOT_NO,
	EOOI.EOOI_PRICE,
	EOOI.EOOI_AMOUNT,
	EOOI.EOOI_TEMPERATURE_LEVEL_CODE,
	EOOI.EOOI_TEMPERATURE_LEVEL_NAME,
	EOOI.EOOI_TEMPERATURE_FM,
	EOOI.EOOI_TEMPERATURE_TO,
	EOOI.EOOI_REMARK,
	EOOI.EOOI_ITEM_TYPE_CODE,
	EOOI.EOOI_ITEM_TYPE_NAME,
	EOOI.EOOI_LINK_PM_CODE,
	EOOI.EOOI_PRODUCTION_DATE,
	EOOI.EOOI_SHELF_LIFE,
	EOOI.EOOI_SHELF_LIFE_UNIT,
	EOOI.EOOI_PROVIDE_CUST_CODE,
	EOOI.EOOI_PROVIDE_CUST_NAME,
	EOOI.EOOI_BAR_CODE,
	EOOI_ITEM_DENSITY,
	EOOI_ITEM_STATUS,
	EOOI_PRODUCT_MODEL,
	EOOI_CHARGE_STANDARD,
	EOOI_PACKAGE_KEY,
	EOOI_IS_TEMPERATURE,
	EOOI_IS_COMBINATION,
	EOOI_ITEM_SCALE,
	EOOI.COMPANY_CODE,
	EOOI.SITE_CODE,
	EOOI.EOOI_IS_TAX,
	EOOI.EOOI_MAX_ROW,
	EOOI.EOOI_LOTATT01,
	EOOI.EOOI_LOTATT02,
	EOOI.EOOI_LOTATT03,
	EOOI.EOOI_LOTATT04,
	EOOI.EOOI_LOTATT05,
	EOOI.EOOI_LOTATT06,
	EOOI.EOOI_LOTATT07,
	EOOI.EOOI_LOTATT08,
	EOOI.EOOI_LOTATT09,
	EOOI.EOOI_LOTATT10,
	EOOI.EOOI_LOTATT11,
	EOOI.EOOI_LOTATT12,
	NVL(LOT.code_alias,
	   (select eb.EBCD_NAME_CN
	      from eb_code_master eb
	     where eb.ebcd_dictionary_type = 'SYS_WM_QUALIFY'
	       and eb.EBCD_SUBSTR1 = 'Y'
	       and eb.ebcd_code = EOOI.EOOI_LOTATT04)) as STATUS_NAME,
	EOOI.EOOI_ALLOCATED_QTY,
	EOOI.EOOI_SIGN_QTY,
	EOOI.EOOI_IS_DANGEROUS,
	EOOI.EOOI_IN_ITEM_STATUS,
	EOOI.EOOI_SALESMAN_CODE,
	EOOI.EOOI_SALESMAN_NAME,
	EOOI.EOOI_SOURCE_DATA_NO,
	EOOI.EOOI_JOB_NO,
	EOOI.EOOI_INVOICE_RECOVER_STATUS,
	EOOI.EOOI_INVOICE_LINE,
	EOOI.EOOI_REAL_OUT_QUANTITY,
	EOOI.EOOI_REAL_IN_QUANTITY,
	EOOI.EOOI_UNIT_QUANTITY,
	EOOI.EOOI_UNIT_GROSS_WEIGHT,
	EOOI.EOOI_UNIT_VOLUME,
	EOOI.EOOI_COM_INSPECT_REMARKS,
	EOOI.EOOI_CWH_IN_CODE,
	EOOI.EOOI_CWH_IN_NAME,
	EOOI.EOOI_CWH_OUT_CODE,
	EOOI.EOOI_CWH_OUT_NAME,
	EOOI.EOOI_UPSTREAM_LINE_NO,
	EOOI.EOOI_FWH_IN_CODE,
	EOOI.EOOI_FWH_IN_NAME,
	EOOI.EOOI_FWH_OUT_CODE,
	EOOI.EOOI_FWH_OUT_NAME,
	EOOI.EOOI_PRICE_NO_TAX,
	EOOI.EOOI_CUSTOMER_ITEM_NO,
	EOOI.EOOI_LOC_CODE,
	EOOI.EOOI_TRACE_NO,
	EOOI.EOOI_LOT,
	EOOI.EOOI_ADJUSTMEN_TYPE,
	EOOI.EOOI_MAIN_GOODS_CODE,
	EOOI.EOOI_REVERSAL_REASON,
	EOOI.EOOI_TARGET_LOTATT01,
	EOOI.EOOI_TARGET_LOTATT02,
	EOOI.EOOI_TARGET_LOTATT03,
	EOOI.EOOI_TARGET_LOTATT04,
	EOOI.EOOI_TARGET_LOTATT05,
	EOOI.EOOI_TARGET_LOTATT06,
	EOOI.EOOI_TARGET_LOTATT07,
	EOOI.EOOI_TARGET_LOTATT08,
	EOOI.EOOI_TARGET_LOTATT09,
	EOOI.EOOI_TARGET_LOTATT10,
	EOOI.EOOI_TARGET_LOTATT11,
	EOOI.EOOI_TARGET_LOTATT12,
	EOOI.EOOI_SUBSTR1,
	EOOI.EOOI_SUBSTR2,
	EOOI.EOOI_SUBSTR3,
	EOOI.EOOI_SUBSTR4,
	EOOI.EOOI_SUBSTR5,
	EOOI.EOOI_SUBSTR6,
	EOOI.EOOI_SUBSTR7,
	EOOI.EOOI_SUBSTR8,
	EOOI.EOOI_SUBDATE1,
	EOOI.EOOI_SUBDATE2,
	EOOI.EOOI_SUBDATE3,
	EOOI.EOOI_SUBDATE4,
	EOOI.EOOI_SUBNUM1,
	EOOI.EOOI_SUBNUM2,
	EOOI.EOOI_SUBNUM3,
	EOOI.EOOI_SUBNUM4,
	EOOI.EOOI_TYPE_NAME_UNIT_CODE,
	NVL(TARGETLOT.code_alias,
           (select eb.EBCD_NAME_CN
              from eb_code_master eb
             where eb.ebcd_dictionary_type = 'SYS_WM_QUALIFY'
               and eb.EBCD_SUBSTR1 = 'Y'
               and eb.ebcd_code = EOOI.EOOI_TARGET_LOTATT04)) as STATUS_TARGET_NAME,
	(select SUM(EOWI.EOWI_REAL_OUT_QUANTITY) 
       		from oms2b.eo_work_item eowi inner join oms2b.eo_work_order eowo on eowi.eowi_work_order_no = eowo.eowo_work_order_no
       		where eowi.eowi_order_no=EOOI.eooi_order_no
			AND EOWI.Eowi_Link_Pm_Code=EOOI.eooi_link_pm_code and eowo.eowo_task_big_type in ('OUT') ) AS EOOI_OUT_QUANTITY,
	(select SUM(EOWI.EOWI_REAL_IN_QUANTITY) 
      		from oms2b.eo_work_item eowi, oms2b.EO_WORK_ORDER eowo
      		where eowi.eowi_work_order_no=eowo.eowo_work_order_no and eowo.eowo_task_big_type='IN' and eowo.eowo_order_no=EOOI.eooi_order_no
      		AND EOWI.Eowi_Link_Pm_Code=EOOI.eooi_link_pm_code) AS EOOI_IN_QUANTITY
 FROM EO_ORDER_ITEM EOOI 
  left join EO_ORDER EOOR
       ON EOOR.Eoor_Order_No = EOOI.Eooi_Order_No
 LEFT JOIN WM_CODE_MASTER LOT
       ON  EOOR.eoor_Customer_Code = LOT.owner_code
       AND EOOI.EOOI_LOTATT04 = LOT.CODE_ID
       AND LOT.STATUS = 0
       AND LOT.REC_STATUS = 0
 LEFT JOIN WM_CODE_MASTER TARGETLOT 
       ON  EOOR.eoor_Customer_Code = TARGETLOT.owner_code
       AND  EOOI.EOOI_TARGET_LOTATT04 = TARGETLOT.CODE_ID
       AND TARGETLOT.STATUS = 0
       AND TARGETLOT.REC_STATUS = 0
WHERE EOOI.REC_STATUS=0
<<AND EOOI.EOOI_ORDER_NO in(:eooiOrderNos)>>
<<AND EOOI.EOOI_ORDER_NO LIKE :eooiOrderNo>>
<<AND EOOI.ORG_ID=:orgId>>
<<AND EOOI.EOOI_ID=:eooiId>>
<#if isMax == 'Y'>
   and EOOI.EOOI_LINK_PM_CODE = (select MAX(TO_NUMBER(t.eooi_link_pm_code)) from EO_ORDER_ITEM t WHERE 1=1 AND t.REC_STATUS=0 AND t.EOOI_ORDER_NO = :eooiOrderNo )
</#if>
ORDER BY TO_NUMBER(EOOI.EOOI_LINK_PM_CODE) ASC,EOOI.EOOI_MAX_ROW ASC 
		]]>
	</sql-query>
</hibernate-mapping>
