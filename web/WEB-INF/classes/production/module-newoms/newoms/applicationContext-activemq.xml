<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:amq="http://activemq.apache.org/schema/core"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
        classpath:/newoms/spring-beans-4.0.xsd   
        http://www.springframework.org/schema/context   
        classpath:/newoms/spring-context-4.0.xsd
        http://www.springframework.org/schema/jms
        classpath:/newoms/jms/spring-jms-4.0.xsd
        http://activemq.apache.org/schema/core
        classpath:/newoms/activemq-core-5.8.0.xsd">

	<!-- ActiveMQ 连接工厂 -->
 	<!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供-->
	<!-- 如果连接网络：tcp://ip:61616；tcp://10.73.128.129:61616未连接网络：tcp://localhost:61616 以及用户名，密码-->
	<amq:connectionFactory id="amqConnectionFactory"
		brokerURL="${active.mq.host}" userName="admin" password="admin"  />

	<!-- Spring Caching连接工厂 -->
 	<!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->  
	<bean id="connectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
		<!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->  
  		<property name="targetConnectionFactory" ref="amqConnectionFactory"></property>
  		<!-- 同上，同理 -->
		<!-- <constructor-arg ref="amqConnectionFactory" /> -->
		<!-- Session缓存数量 -->
		<property name="sessionCacheSize" value="100" />
	</bean>
	
	<!-- Spring JmsTemplate 的消息生产者 start-->
	
	<!-- 定义JmsTemplate的Queue类型 -->
	<bean id="jmsQueueTemplate" class="org.springframework.jms.core.JmsTemplate">
		<!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->  
		<constructor-arg ref="connectionFactory" />
		<!-- 非pub/sub模型（发布/订阅），即队列模式 -->
		<property name="pubSubDomain" value="false" />
	</bean>
	
	<!-- 定义JmsTemplate的Topic类型 -->
	<bean id="jmsTopicTemplate" class="org.springframework.jms.core.JmsTemplate">
		 <!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->  
		<constructor-arg ref="connectionFactory" />
		<!-- pub/sub模型（发布/订阅） -->
		<property name="pubSubDomain" value="true" />
	</bean>
	
	
	<bean id="activeMQService" class="com.sinoservices.common.service.impl.ActiveMQServiceImpl">
        <property name="jmsTemplate" ref="jmsQueueTemplate" />
        <property name="queueName" value="1"/>
    </bean>
    
    <bean class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destinationName" value="1" />
	</bean>
	
	
	<!-- 快递状态反馈 -->
	<bean id="expressOrderStatusReceptionListener" class="com.sinoservices.oms.mq.service.ExpressOrderStatusReceptionListener">
    </bean>
   
	<bean class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destinationName" value="SCC_OrderMilestone_HLS" />
		<property name="messageListener" ref="expressOrderStatusReceptionListener" />
	</bean>
	<!-- 快递下发回执-->
	<bean id="expressReceiptListener" class="com.sinoservices.oms.mq.service.ExpressReceiptListener">
    </bean>
   
	<bean class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destinationName" value="SCC_OrderFB_HLS" />
		<property name="messageListener" ref="expressReceiptListener" />
	</bean>
</beans>  